@page "/load"

@inject Data.AppState  AppState

@using GPUDeclickerUWP.Model.InputOutput;

@using System.ComponentModel.DataAnnotations;

<h3>Loader</h3>

<div class="card mb-2">
    <h4 class="card-title">Load audio file using URL (link)</h4>
    <div class="card-text">
        <EditForm Model="@_viewerModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <InputText id="uri" @bind-Value="_viewerModel.Uri" />

            <button type="submit" class="btn btn-primary">Load</button>

            <!--Test buttons-->
            <button type="submit" class="btn btn-secondary" @onclick="@(_ => { _viewerModel.Uri="https://programmerincanada.com/wp-content/uploads/2020/03/feet_short_short.wav"; })">Shortest Test File</button>
            <button type="submit" class="btn btn-secondary" @onclick="@(_ => { _viewerModel.Uri="https://programmerincanada.com/wp-content/uploads/2020/03/feet_short.wav"; })">Short Test File</button>
            <button type="submit" class="btn btn-secondary" @onclick="@(_ => { _viewerModel.Uri="https://programmerincanada.com/wp-content/uploads/2020/03/feet.wav"; })">Full Test File</button>

        </EditForm>
    </div>
</div>

<h4>Length : @GetLength()</h4>

@code {

    private class ViewerModel
    {
        [Required]
        [Url(ErrorMessage = "Not a valid URL")]
        public string Uri { get; set; }
    }

    private ViewerModel _viewerModel = new ViewerModel();
    private AudioInputOutput _audioIO = new AudioInputOutput();

    private void HandleValidSubmit()
    {
        _audioIO.LoadAudioFromHttp(_viewerModel.Uri);
        AppState.SetAudioData(_audioIO.GetAudioData());
    }

    private string GetLength() => AppState.AudioData is null
        ? "unknown"
        : AppState.AudioData.LengthSamples().ToString();
}
